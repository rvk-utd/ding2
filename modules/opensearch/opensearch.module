<?php
/**
 * @file
 * Drupal implementation of a OpenSearch search provider for the DING! project.
 */

use Drupal\xautoload\Adapter\LocalDirectoryAdapter;

define('OPENSEARCH_DEFAULT_CACHE_LIFETIME', 900);

/**
 * Implements hook_ding_provider().
 */
function opensearch_ding_provider() {
  return array(
    'title' => 'Opensearch',
    'settings' => 'opensearch_admin_settings',
    'provides' => array(
      'search' => array(
        'prefix' => 'search',
        'file' => 'includes/opensearch.search.inc',
      ),
    ),
  );
}

/**
 * Form builder; Configure Opensearch settings for this site.
 *
 * @ingroup forms
 *
 * @see system_settings_form()
 */
function opensearch_admin_settings($form_state) {
  $form = array();

  $form['opensearch'] = array(
    '#type' => 'fieldset',
    '#title' => t('Opensearch service settings'),
    '#tree' => FALSE,
  );

  // TODO BBS-SAL: Consider alternate handling of Ting agency.
  // This value has multiple purposes:
  // - As configuration when accessing OpenSearch
  // - As an unique identifier for the library organization in other parts of
  //   the system
  // Consider whether the variable should be kept (and moved back to the Ting
  // module) or renamed to opensearch_agency and use cases updated so that
  // other providers also can provide a unique identifier.
  $form['opensearch']['ting_agency'] = array(
    '#type' => 'textfield',
    '#title' => t('Library code'),
    '#description' => t('The 6-digit code representing the library organization'),
    '#default_value' => variable_get('ting_agency', ''),
  );

  $form['opensearch']['opensearch_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Search service URL'),
    '#description' => t('URL to the Ting search webservice, e.g. http://opensearch.addi.dk/3.0/'),
    '#required' => TRUE,
    '#default_value' => variable_get('opensearch_url', ''),
  );

  $form['opensearch']['authentification'] = array(
    '#type' => 'fieldset',
    '#title' => t('Authentication'),
    '#tree' => FALSE,
  );

  $form['opensearch']['authentification']['opensearch_use_auth'] = array(
    '#type' => 'checkbox',
    '#title' => t('Use authentication'),
    '#default_value' => variable_get('opensearch_use_auth', FALSE),
    '#description' => t('Use authentication rather than rely on IP granted access.'),
  );

  $auth_states = array(
    'enabled' => array(
      'input[name=opensearch_use_auth]' => array('checked' => TRUE),
    ),
  );

  $form['opensearch']['authentification']['opensearch_auth_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Name'),
    '#default_value' => variable_get('opensearch_auth_name', ''),
    '#states' => $auth_states,
  );

  $form['opensearch']['authentification']['opensearch_auth_pass'] = array(
    '#type' => 'textfield',
    '#title' => t('Password'),
    '#default_value' => variable_get('opensearch_auth_pass', ''),
    '#states' => $auth_states,
  );

  $form['opensearch']['authentification']['opensearch_auth_group'] = array(
    '#type' => 'textfield',
    '#title' => t('Group'),
    '#default_value' => variable_get('opensearch_auth_group', ''),
    '#states' => $auth_states,
  );

  $form['opensearch']['opensearch_recommendation_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Recommendation service URL'),
    '#description' => t('URL to the recommendation webservice (Andre der har lÃ¥nt...) , e.g. http://openadhl.addi.dk/1.1/'),
    '#required' => FALSE,
    '#default_value' => variable_get('opensearch_recommendation_url', ''),
  );

  $form['opensearch']['opensearch_enable_logging'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable logging'),
    '#default_value' => variable_get('opensearch_enable_logging', FALSE),
    '#weight' => 1,
  );

  $intervals = array(
    60,
    300,
    900,
    1800,
    3600,
    10800,
    43200,
    86400,
    259200,
    604800,
  );

  $options = array();
  foreach ($intervals as $interval) {
    $options[$interval] = format_interval($interval, 2);
  }

  $form['opensearch']['opensearch_cache_lifetime'] = array(
    '#type' => 'select',
    '#title' => t('Cache lifetime'),
    '#default_value' => variable_get('opensearch_cache_lifetime', OPENSEARCH_DEFAULT_CACHE_LIFETIME),
    '#options' => $options,
    '#description' => t("Cache answers from the datawell for this time. At least a few minutes is recommended, so the same objects doesn't have to be fetched on each page request."),
    '#weight' => 1,
  );

  // TODO BBS-SAL: Search profiles are a opensearch concept. Parts of it could
  // probably be kept search provider independent.
  $form['opensearch']['ting_search_profile'] = array(
    '#type' => 'textfield',
    '#title' => t('Search profile'),
    '#description' => t('Profile name, used for filtering the search based on settings from vip.dbc.dk.'),
    '#default_value' => variable_get('ting_search_profile', ''),
  );

  return system_settings_form($form);
}

/**
 * Implements hook_xautoload().
 *
 * Place our OpenSearch classes in the OpenSearch namespace.
 */
function opensearch_xautoload(LocalDirectoryAdapter $adapter) {
  $adapter->absolute()->addPsr4('OpenSearch\\', drupal_get_path('module', 'opensearch') . '/src');
}
